#drop_na(FST) %>%
summarise(mean=mean(FST, na.rm = T), sd=sd(FST, na.rm = T), n= n()) %>%
mutate(se = sd/sqrt(n)) %>%
mutate(Chr = "Autosomes",
stat = 'FST')
Summary_table <- rbind(MeanPi_Auto, MeanPi_Notinversion, MeanPi_Inversion,
MeanPi_Inversion_A, MeanPi_Inversion_B,
MeanDxy_Auto, MeanDxy_Notinversion, MeanDxy_inversion,
MeanFst_Auto, MeanFst_Notinversion, MeanFst_inversion)
Summary_table$snptype = snptype
Summary_tables[[snptype]] <- Summary_table
MedianChrom <- All_Chroms %>%
group_by(Chr) %>%
summarise(Middle = median(PlotOrder, na.rm=TRUE))
All_Chroms_Long <- All_Chroms %>%
select(Position, FST, Dxy_Adj, Pi_All_Adj, Chr, PlotOrder) %>%
pivot_longer(names_to = "Test", values_to="TestStat", cols=c(FST, Dxy_Adj, Pi_All_Adj)) %>%
mutate(Test = str_replace_all(Test,c("FST"="Fst: A vs B", "Dxy_Adj" = "Dxy: A vs B", "Pi_All_Adj" = "Pi (Nei's)")))
Z_Chroms_Long <- All_Chroms %>%
filter(Chr =="Z") %>%
select(Position, FST, Dxy_Adj, Pi_All_Adj, Chr, PlotOrder) %>%
pivot_longer(names_to = "Test", values_to="TestStat", cols=c(FST, Dxy_Adj, Pi_All_Adj)) %>%
mutate(Test = str_replace_all(Test,c("FST"="Fst: A vs B", "Dxy_Adj" = "Dxy: A vs B",  "Pi_All_Adj" = "Pi (Nei's)")))
###########
## FIGURE 1 PLOTING ##
mypalette <- rep(c("grey80", "darkorange1", "black", "firebrick1", "grey60", "tan4"),length.out=40) # chr color palette
AllStats <- All_Chroms_Long %>%
filter(Test != "Dxy: A vs B") %>%
ggplot(.,aes(x=PlotOrder,y = TestStat, color=Chr)) +
geom_point(size=0.1)+
theme_bw()+
geom_hline(yintercept=0,linetype='solid',colour="grey50")+
scale_colour_manual(values=mypalette) +
scale_x_continuous(label = MedianChrom$Chr[c(1:12,33)], breaks= MedianChrom$Middle[c(1:12,33)]) +
theme(legend.position ="none") +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank()) +
xlab("") +
ylab("") +
facet_wrap(~Test, ncol=1, scales="free_y")
# Allstats_smooth_line <-
#   All_Chroms_Long %>% filter(Test != "Dxy: A vs B") %>%
#     ggplot(.,aes(x=PlotOrder,y = TestStat, color=Chr)) +
#     #geom_line(linewidth=0.3)+
#     geom_point(size=0.3, alpha = 0.1)+
#     theme_bw()+
#     geom_hline(yintercept=0,linetype='solid',colour="grey50")+
#     scale_colour_manual(values=mypalette) +
#     scale_x_continuous(label = MedianChrom$Chr[c(1:12,33)], breaks= MedianChrom$Middle[c(1:12,33)]) +
#     theme(legend.position ="none") +
#     theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank()) +
#     xlab("") +
#     ylab("") +
#     facet_wrap(~Test, ncol=1, scales="free_y") +
#     geom_smooth(data=subset(All_Chroms_Long, Chr %in% c('1',"1a",'2','3','4','4a','5','6','7','8','9','10') &
#                               Test != "Dxy: A vs B"),
#                 linewidth=0.4, aes(group = Chr), colour = 'blue', se = F,
#                method = 'loess', span = 0.3)
#
#   ggsave(filename = paste0("plots/min_seg_sites_", mss, "_",  vcf_type, "_",snptype, "_Pi_Fst_Dxy_All_smoothed_line.png"),
#          Allstats_smooth_line,
#          width = 8, height = 6, units = "in", device='png')
Z_labeller <- as_labeller(c(`Dxy: A vs B` = expression("Dxy~*~10^-3:A~vs~B"),
`Fst: A vs B` = "`Fst: A vs B`",
`Pi (Nei's)` = "`Pi (Nei's)`"), label_parsed)
AllStatsZ <- ggplot(Z_Chroms_Long,aes(x=Position/1000000,y = TestStat, color=Chr)) +
geom_point(size=0.3)+
theme_bw()+
geom_hline(yintercept=0,linetype='solid',colour="grey50")+
scale_colour_manual(values="black") +
#scale_x_continuous(label = MedianChrom$Chr[c(33)], breaks= MedianChrom$Middle[c(33)]) +
theme(legend.position ="none") +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank()) +
geom_vline(xintercept = 6.5, colour="firebrick1", linetype = "longdash") +
geom_vline(xintercept = 70.1, colour="firebrick1", linetype = "longdash") +
xlab("Position (Mbp)") +
ylab("") +
facet_wrap(~Test, ncol=3, scales="free_y")
Pi_Fst_Dxy_All_Z <- AllStats + AllStatsZ +
plot_layout(ncol=1, nrow=2, widths=c(2.5), heights = c(3, 1)) +
plot_annotation(tag_levels = 'a')
ggsave(filename = paste0("plots/min_seg_sites_", mss, "_",  vcf_type, "_",snptype, "_Pi_Fst_Dxy_All_Z.png"),
Pi_Fst_Dxy_All_Z,
width = 8, height = 6, units = "in", device='png')
ggsave(filename = paste0("plots/min_seg_sites_", mss, "_",  vcf_type, "_",snptype, "_Pi_Fst_Dxy_All_Z.pdf"),
Pi_Fst_Dxy_All_Z,
width = 8, height = 6, units = "in", device='pdf')
ggsave(filename = paste0("plots/min_seg_sites_", mss, "_",  vcf_type, "_",snptype, "_Pi_Fst_Dxy_All_Z.svg"),
Pi_Fst_Dxy_All_Z,
width = 8, height = 6, units = "in", device='svg')
###########################################
## FIGURE 2 Plotting ##
ChrZ_Long <- All_Chroms %>%
filter(Chr == "Z") %>%
dplyr::select(Position, TajimasD_A, TajimasD_B, FayWuH_A, FayWuH_B,
ZengE_A, ZengE_B, Pi_A, Pi_B, adj.n.sites) %>%
mutate(Pi_A = Pi_A / adj.n.sites) %>%
mutate(Pi_B = Pi_B / adj.n.sites) %>%
mutate(Position = Position / 1000000) %>%
pivot_longer(names_to = "Test", values_to="TestStat", cols = TajimasD_A:Pi_B) %>%
mutate(Haplotype = rep(c("Haplotype A", "Haplotype B"),length.out=nrow(.))) %>%
mutate(Test2 = str_replace_all(Test,c("TajimasD_A" = "Tajima's D",
"TajimasD_B" = "Tajima's D",
"FayWuH_A" = "Fay and Wu's H",
"FayWuH_B" = "Fay and Wu's H",
"ZengE_A" = "Zeng's E",
"ZengE_B" = "Zeng's E",
"Pi_A" = "Pi (Nei's)",
"Pi_B" = "Pi (Nei's)")))
#plot add ons
pas <- theme_bw()+
theme(legend.position ="none") +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank()) +
theme(strip.background=element_rect(fill="darkorange2"))
ChrZ_Neutrality <- ###Edit to ChrZ_Pi for diversity, Chr_Neutrality for others
ggplot(subset(ChrZ_Long,Test2 != "Pi (Nei's)"),aes(x=Position,y = TestStat)) +
geom_point(size=0.3)+
geom_hline(yintercept=0,linetype='solid',colour="grey50")+
geom_vline(xintercept = 6.5, colour="firebrick1", linetype = "longdash") +
geom_vline(xintercept = 70.1, colour="firebrick1", linetype = "longdash") +
scale_colour_manual(values="black") +
facet_grid(cols=vars(Haplotype), rows = vars(Test2)) +
ylab("") + xlab("") + pas
ChrZ_Pi <-
ggplot(subset(ChrZ_Long,Test2 == "Pi (Nei's)"),aes(x=Position,y = TestStat)) +
geom_point(size=0.3)+
#ylim(0,0.01) +
geom_hline(yintercept=0,linetype='solid',colour="grey50")+
geom_vline(xintercept = 6.5, colour="firebrick1", linetype = "longdash") +
geom_vline(xintercept = 70.1, colour="firebrick1", linetype = "longdash") +
scale_colour_manual(values="black") +
facet_grid(cols=vars(Haplotype), rows = vars(Test2)) + ylab("") +
xlab("Position (Mbp)") +
pas
ChromZPlots <- ChrZ_Neutrality + ChrZ_Pi +
plot_layout(ncol=1, nrow=2, axis_titles='collect_x', heights=c(2.5,1)) +
plot_annotation(tag_levels = 'a')
ChromZPlots
ggsave(plot=ChromZPlots, filename=paste0("plots/min_seg_sites_", mss, "_",  vcf_type, "_",snptype, "_ChromZ_Neutrality_Diversity_Longitudinal.png"), width=5,height=8, device = 'png')
ggsave(plot=ChromZPlots, filename=paste0("plots/min_seg_sites_", mss, "_",  vcf_type, "_",snptype, "_ChromZ_Neutrality_Diversity_Longitudinal.pdf"), width=5,height=8, device = 'pdf')
ggsave(plot=ChromZPlots, filename=paste0("plots/min_seg_sites_", mss, "_",  vcf_type, "_",snptype, "_ChromZ_Neutrality_Diversity_Longitudinal.svg"), width=5,height=8, device = 'svg')
###########################################
##############################################
##### Supplementary SFS plots
All_Chroms_SFS <- All_Chroms %>%
select(Position, TajimasD_All, FayWuH_All, ZengE_All, Chr, PlotOrder) %>%
pivot_longer(names_to = "Test", values_to="TestStat", cols=c(TajimasD_All,FayWuH_All,ZengE_All)) %>%
mutate(Test = str_replace_all(Test,c("TajimasD_All"="Tajima's D", "FayWuH_All" = "Fay & Wu's H", "ZengE_All" = "Zeng's E")))
Z_Chroms_SFS <- All_Chroms %>%
filter(Chr =="Z") %>%
select (Position, TajimasD_A, TajimasD_B, FayWuH_A, FayWuH_B, ZengE_A, ZengE_B, Chr, PlotOrder) %>%
pivot_longer(names_to = "Test", values_to="TestStat", cols=c(TajimasD_A, TajimasD_B, FayWuH_A, FayWuH_B, ZengE_A, ZengE_B)) %>%
mutate(Test = str_replace_all(Test,c("TajimasD_A" = "Tajima's D: A",
"TajimasD_B" = "Tajima's D: B",
"FayWuH_A" = "Fay & Wu's H: A",
"FayWuH_B" = "Fay & Wu's H: B",
"ZengE_A" = "Zeng's E: A",
"ZengE_B" = "Zeng's E: B")))
All_Chroms_SFS$Test <- factor(All_Chroms_SFS$Test, levels = c("Tajima's D", "Fay & Wu's H", "Zeng's E"))
Z_Chroms_SFS$Test <- factor(Z_Chroms_SFS$Test, levels = c("Tajima's D: A",
"Tajima's D: B",
"Fay & Wu's H: A",
"Fay & Wu's H: B",
"Zeng's E: A",
"Zeng's E: B"))
mypalette <- rep(c("grey80", "darkorange1", "black", "firebrick1", "grey60", "tan4"),length.out=40) # chr color palette
SFS_Stats <- All_Chroms_SFS %>%
filter(Chr != "Z") %>%
ggplot(.,aes(x=PlotOrder,y = TestStat, color=Chr)) +
#geom_line(linewidth=0.3)+
geom_point(size=0.3)+
theme_bw()+
geom_hline(yintercept=0,linetype='solid',colour="grey50")+
scale_colour_manual(values=mypalette) +
scale_x_continuous(label = MedianChrom$Chr[c(1:12)], breaks= MedianChrom$Middle[c(1:12)]) +
theme(legend.position ="none") +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank()) +
xlab("") +
ylab("") +
facet_wrap(~Test, ncol=1, scales="free_y")
SFS_StatsZ <- ggplot(Z_Chroms_SFS,aes(x=Position/1000000,y = TestStat, color=Chr)) +
geom_point(size=0.3)+
theme_bw()+
geom_hline(yintercept=0,linetype='solid',colour="grey50")+
scale_colour_manual(values="black") +
#scale_x_continuous(label = MedianChrom$Chr[c(33)], breaks= MedianChrom$Middle[c(33)]) +
theme(legend.position ="none") +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank()) +
geom_vline(xintercept = 6.5, colour="firebrick1", linetype = "longdash") +
geom_vline(xintercept = 70.1, colour="firebrick1", linetype = "longdash") +
xlab("Position (Mbp)") +
ylab("") +
facet_wrap(~Test, ncol=2, dir="h")
SFS_All_Z <- SFS_Stats + SFS_StatsZ +
plot_layout(ncol=1, nrow=2, widths=c(2.5), heights = c(2, 2)) +
plot_annotation(tag_levels = 'a')
ggsave(filename = paste0("plots/min_seg_sites_", mss, "_",  vcf_type, "_",snptype, "_SFS_All_Z.png"),
SFS_All_Z,
width = 8, height = 8, units = "in", device='png')
#####################################
}
}
system(paste0("mv plots/*pdf ", "plots/", vcf_type, "/"))
system(paste0("mv plots/*png ", "plots/", vcf_type, "/"))
system(paste0("mv plots/*svg ", "plots/", vcf_type, "/"))
Summary_tables %>% bind_rows() %>%
mutate(mean = ifelse(stat == "Pi", (mean*1000), mean)) %>%
mutate(mean = ifelse(stat == "dxy", (mean*1000), mean)) %>%
mutate(values = paste0(round(mean, 4), " (",round(sd,6), ")")) %>%
select(-c(mean,sd,n,se)) %>%
spread(Chr, values) %>%
filter(snptype %in% c("CorZPHZD", "CorZPHFD", "CorZPHNCXG")) %>%
mutate(stat=ifelse(stat == "Pi", "pi (*10^-3)", stat),
stat=ifelse(stat == "dxy", "dxy (*10^-3): A vs B", stat),
stat = ifelse(stat == "FST", "FST:A vs B", stat)) %>%
rename(`Variable Site` = snptype) %>%
mutate(
`Variable Site` = ifelse(`Variable Site` == "CorZPHZD", "0-fold", `Variable Site`),
`Variable Site` = ifelse(`Variable Site` == "CorZPHFD", "4-fold", `Variable Site`),
`Variable Site` = ifelse(`Variable Site` == "CorZPHNCXG", "Non-Coding", `Variable Site`)) %>%
rename(`Z (outside inversion)` = Z_outside,
`Z (within inversion)` = Z_inside,
`A birds (within inversion)` = Z_insideA,
`B birds (within inversion)` = Z_insideB,
Measure = stat)  %>%
.[c(9,7,8,3,1,2,6,4,5),c(1:3,7,4,5,6)] %>%
write.csv(paste0("indata/PopGenome/", vcf_type, "_Summary_tables.csv"), row.names=FALSE)
library(ggplot2)
library(ggpubr)
library(tidyverse)
## DIFFERENTIAL GENE EXPRESSION ANALYSES
# PER GENE BASIS USING abs LF
#PLOTS WITH RANK CORRELATIONS DO NOT FILTER FOR DN_CONT < 0
DEG_data <- read.table("outdata/FINAL_STATS/DEG_DNDS.txt")
### SPEARMAN RANK ANALYSIS ----
## DN
cor.test(abs(DEG_data$logFC), DEG_data$Dn_cont, method = 'spearman', exact = FALSE )
## DS
cor.test(abs(DEG_data$logFC), DEG_data$Ds_cont, method = 'spearman', exact = FALSE )
DEGplots <- list()
DEGplots[[1]] <- ggplot(DEG_data, aes(x = Dn_cont, y = abs(logFC))) + geom_point() +
stat_cor(method = 'spearman') +
labs(x = '', y = '')
DEGplots[[2]] <- ggplot(DEG_data, aes(x = Ds_cont, y = abs(logFC))) + geom_point() +
stat_cor(method = 'spearman') +
labs(x = '', y = '')
DEGplots_arranged <- ggarrange(plotlist = DEGplots, nrow = 1, labels = c("A", "B"))
ggsave("plots/DEGplots_SPEARMAN_arranged.pdf", DEGplots_arranged, height = 5, width = 10)
system("open plots/DEGplots_SPEARMAN_arranged.pdf")
## ALLELE SPECIFIC EXPRESSION EXPRESSION ANALYSIS ----
#PER GENE BASIS USING abs LF
#PLOTS WITH RANK CORRELATIONS DO NOT FILTER FOR DN_CONT < 0
# REPORT MEASURES FOR HOM BIRDS and HET BIRDS
ASE_DATA <- read.table("outdata/FINAL_STATS/ASE_DNDS.txt")
#### SPEARMANS RANK FOR HETEROZYGOTES
hetASE <- ASE_DATA[ASE_DATA$genotype == "AB",]
cor.test(abs(hetASE$log2_aFC), hetASE$Ds_cont, method = 'spearman', exact = FALSE)
cor.test(abs(hetASE$log2_aFC), hetASE$Dn_cont, method = 'spearman', exact = FALSE)
### SPEARMNS RANK FOR HOMOZYGOTES
homASE <- ASE_DATA[ASE_DATA$genotype == "AA",]
cor.test(abs(homASE$log2_aFC), homASE$Ds_cont, method = 'spearman', exact = FALSE)
cor.test(abs(homASE$log2_aFC), homASE$Dn_cont, method = 'spearman', exact = FALSE)
ASEplots <- list()
ASEplots[[1]] <- ggplot(hetASE, aes(x = (Ds_cont), y = (abs(log2_aFC)))) +
geom_point(alpha = 0.1) +
stat_cor(method = 'spearman') + labs(x = "", y = "") +
ylim(0,11) + theme_bw()
ASEplots[[2]] <- ggplot(hetASE, aes(x = Dn_cont, y = abs(log2_aFC))) +
geom_point(alpha = 0.1) +
stat_cor(method = 'spearman') + labs(x = "", y = "")+ylim(0,11)+ theme_bw()
ASEplots[[3]] <- ggplot(homASE, aes(x = (Ds_cont), y = (abs(log2_aFC)))) +
geom_point(alpha = 0.1) +
stat_cor(method = 'spearman') +
labs(x = 'No of synonymous differences/coding sequence length', y = "") +ylim(0,11)+ theme_bw()
ASEplots[[4]] <- ggplot(homASE, aes(x = Dn_cont, y = abs(log2_aFC))) +
geom_point(alpha = 0.1) +
stat_cor(method = 'spearman') +
labs(x = 'No of nonsynonmous differences/coding sequence length', y = "") +ylim(0,11)+ theme_bw()
ASEplots_arranged <- ggarrange(plotlist = ASEplots, labels = c("a", "b", "c", "d"))
ASEplots_arranged <- annotate_figure(ASEplots_arranged, left =
text_grob(bquote('|'~log[2]~ '(fold change) |'), rot = 90))
ggsave("plots/ASEplots_SPEARMAN_arranged.pdf", ASEplots_arranged, height = 6, width = 10)
allplots_arranged <-ggarrange(plotlist = c(DEGplots, ASEplots), ncol = 2,
nrow = 3, labels = LETTERS[1:6])
allplots_arranged <- annotate_figure(allplots_arranged, left =
text_grob(bquote('|'~log[2]~ '(fold change) |'), rot = 90))
ggsave("plots/allplots_arranged.pdf", allplots_arranged, height = 10, width = 10)
system("open plots/allplots_arranged.pdf")
## Check candidates of Viitaniemi paper of ASE
candidates <- c("DMGDH", "FREM1", "ENSTGUG00000021693")
DEG_data[DEG_data$Gene_Name %in% candidates,] %>% View()
DEG_MM_MF <- read.table("outdata/FINAL_STATS/DEG_DNDSMM_MF.txt") %>%
select(Gene_Name, MFBias)
ASE_DATA <- read.table("outdata/FINAL_STATS/ASE_DNDS.txt")
ASE_DATA <- merge(ASE_DATA, DEG_MM_MF, by.x = 'name', by.y = "Gene_Name")
#### SPEARMANS RANK FOR HETEROZYGOTES
hetASE <- ASE_DATA[ASE_DATA$genotype == "AB",]
cor.test(abs(hetASE$log2_aFC), hetASE$Ds_cont, method = 'spearman', exact = FALSE)
cor.test(abs(hetASE$log2_aFC), hetASE$Dn_cont, method = 'spearman', exact = FALSE)
### SPEARMNS RANK FOR HOMOZYGOTES
homASE <- ASE_DATA[ASE_DATA$genotype == "AA",]
cor.test(abs(homASE$log2_aFC), homASE$Ds_cont, method = 'spearman', exact = FALSE)
cor.test(abs(homASE$log2_aFC), homASE$Dn_cont, method = 'spearman', exact = FALSE)
ASEplots <- list()
ASEplots[[1]] <- ggplot(hetASE, aes(x = (Ds_cont), y = (abs(log2_aFC)), colour = MFBias)) + geom_point() +
stat_cor(method = 'spearman') + labs(x = "", y = "") +ylim(0,11) + theme_bw()
ASEplots[[2]] <- ggplot(hetASE, aes(x = Dn_cont, y = abs(log2_aFC), colour = MFBias)) + geom_point() +
stat_cor(method = 'spearman') + labs(x = "", y = "")+ylim(0,11)+ theme_bw()
ASEplots[[3]] <- ggplot(homASE, aes(x = (Ds_cont), y = (abs(log2_aFC)), colour = MFBias)) + geom_point() +
stat_cor(method = 'spearman') +
labs(x = 'No of synonymous differences/coding sequence length', y = "") +ylim(0,11)+ theme_bw()
ASEplots[[4]] <- ggplot(homASE, aes(x = Dn_cont, y = abs(log2_aFC), colour = MFBias)) + geom_point() +
stat_cor(method = 'spearman') +
labs(x = 'No of nonsynonmous differences/coding sequence length', y = "") +ylim(0,11)+ theme_bw()
ASEplots_arranged <- ggarrange(plotlist = ASEplots, labels = c("a", "b", "c", "d"))
hetASE %>%
ggplot(aes(x = MFBias, y = abs(log2_aFC), fill = MFBias)) + geom_boxplot()
hetASE %>%
group_by(MFBias) %>%
summarise(mean = mean(abs(log2_aFC)), sd = sd(abs(log2_aFC)), n = n())
allplots_arranged
ASEplots
ASEplots_arranged
ASEplots_arranged
dev.off()
ASEplots_arranged
allplots_arranged
ASEplots
allplots_arranged
ASEplots[[1]]
ASEplots[[2]]
ggplot(hetASE, aes(x = (Ds_cont), y = (abs(log2_aFC)))) +
geom_point(alpha = 0.1) +
stat_cor(method = 'spearman') + labs(x = "", y = "") +
ylim(0,11) + theme_bw()
ASEplots <- list()
ASEplots[[1]] <- ggplot(hetASE, aes(x = (Ds_cont), y = (abs(log2_aFC)))) +
geom_point(alpha = 0.1) +
stat_cor(method = 'spearman') + labs(x = "", y = "") +
ylim(0,11) + theme_bw()
ASEplots[[2]] <- ggplot(hetASE, aes(x = Dn_cont, y = abs(log2_aFC))) +
geom_point(alpha = 0.1) +
stat_cor(method = 'spearman') + labs(x = "", y = "")+ylim(0,11)+ theme_bw()
ASEplots[[3]] <- ggplot(homASE, aes(x = (Ds_cont), y = (abs(log2_aFC)))) +
geom_point(alpha = 0.1) +
stat_cor(method = 'spearman') +
labs(x = 'No of synonymous differences/coding sequence length', y = "") +ylim(0,11)+ theme_bw()
ASEplots[[4]] <- ggplot(homASE, aes(x = Dn_cont, y = abs(log2_aFC))) +
geom_point(alpha = 0.1) +
stat_cor(method = 'spearman') +
labs(x = 'No of nonsynonmous differences/coding sequence length', y = "") +ylim(0,11)+ theme_bw()
ASEplots[[1]]
allplots_arranged <-ggarrange(plotlist = c(ASEplots), ncol = 2,
nrow = 3, labels = c("a", "b", "c", "d"))
allplots_arranged <- annotate_figure(allplots_arranged, left =
text_grob(bquote('|'~log[2]~ '(fold change) |'), rot = 90))
ggsave("plots/allplots_arranged.pdf", allplots_arranged, height = 10, width = 10)
system("open plots/allplots_arranged.pdf")
allplots_arranged
allplots_arranged <- annotate_figure(allplots_arranged, left =
text_grob(bquote('|'~log[2]~ '(fold change) |'), rot = 90))
allplots_arranged
allplots_arranged <-ggarrange(plotlist = c(ASEplots), ncol = 2,
nrow = 3, labels = c("a", "b", "c", "d"))
allplots_arranged
allplots_arranged <- annotate_figure(allplots_arranged, left =
text_grob(bquote('|'~log[2]~ '(fold change) |'), rot = 90))
allplots_arranged
?annotate_figure
ASEplots <- list()
ASEplots[[1]] <- ggplot(hetASE, aes(x = (Ds_cont), y = (abs(log2_aFC)))) +
geom_point(alpha = 0.1) +
stat_cor(method = 'spearman') + labs(x = "", y = "") +
ylim(0,11) + theme_bw()
ASEplots[[2]] <- ggplot(hetASE, aes(x = Dn_cont, y = abs(log2_aFC))) +
geom_point(alpha = 0.1) +
stat_cor(method = 'spearman') + labs(x = "", y = "")+ylim(0,11)+ theme_bw()
ASEplots[[3]] <- ggplot(homASE, aes(x = (Ds_cont), y = (abs(log2_aFC)))) +
geom_point(alpha = 0.1) +
stat_cor(method = 'spearman') +
labs(x = 'Ds/gene length', y = "") +ylim(0,11)+ theme_bw()
ASEplots[[4]] <- ggplot(homASE, aes(x = Dn_cont, y = abs(log2_aFC))) +
geom_point(alpha = 0.1) +
stat_cor(method = 'spearman') +
labs(x = 'Dn/gene length', y = "") +ylim(0,11)+ theme_bw()
ASEplots_arranged <- ggarrange(plotlist = ASEplots, labels = c("a", "b", "c", "d"))
ASEplots_arranged <- annotate_figure(ASEplots_arranged, left =
text_grob(bquote('|'~log[2]~ '(fold change) |'), rot = 90))
ggsave("plots/ASEplots_SPEARMAN_arranged.pdf", ASEplots_arranged, height = 6, width = 10)
allplots_arranged <-ggarrange(plotlist = c(ASEplots), ncol = 2,
nrow = 3, labels = c("a", "b", "c", "d"))
allplots_arranged <- annotate_figure(allplots_arranged, left =
text_grob(bquote('|'~log[2]~ '(fold change) |'), rot = 90))
ggsave("plots/allplots_arranged.pdf", allplots_arranged, height = 10, width = 10)
system("open plots/allplots_arranged.pdf")
ASEplots[[3]] <- ggplot(homASE, aes(x = (Ds_cont), y = (abs(log2_aFC)))) +
geom_point(alpha = 0.1) +
stat_cor(method = 'spearman') +
labs(x = 'Ds / gene length', y = "") +ylim(0,11)+ theme_bw()
ASEplots[[4]] <- ggplot(homASE, aes(x = Dn_cont, y = abs(log2_aFC))) +
geom_point(alpha = 0.1) +
stat_cor(method = 'spearman') +
labs(x = 'Dn / gene length', y = "") +ylim(0,11)+ theme_bw()
ASEplots_arranged <- ggarrange(plotlist = ASEplots, labels = c("a", "b", "c", "d"))
ASEplots_arranged <- annotate_figure(ASEplots_arranged, left =
text_grob(bquote('|'~log[2]~ '(fold change) |'), rot = 90))
ggsave("plots/ASEplots_SPEARMAN_arranged.pdf", ASEplots_arranged, height = 6, width = 10)
allplots_arranged <-ggarrange(plotlist = c(ASEplots), ncol = 2,
nrow = 3, labels = c("a", "b", "c", "d"))
allplots_arranged <- annotate_figure(allplots_arranged, left =
text_grob(bquote('|'~log[2]~ '(fold change) |'), rot = 90))
ggsave("plots/allplots_arranged.pdf", allplots_arranged, height = 10, width = 10)
system("open plots/allplots_arranged.pdf")
ASEplots_arranged
ggsave("plots/ASEplots_SPEARMAN_arranged.pdf", ASEplots_arranged, height = 6, width = 10)
system("open plots/Aseplots_SPEARMAN_arranged.pdf")
ggsave("plots/ASEplots_SPEARMAN_arranged.pdf", ASEplots_arranged, height = 6, width = 6)
system("open plots/Aseplots_SPEARMAN_arranged.pdf")
allplots_arranged <-ggarrange(plotlist = c(ASEplots), ncol = 2,
nrow = 3, labels = c("a", "b", "c", "d"))
allplots_arranged <- annotate_figure(allplots_arranged, left =
text_grob(bquote('|'~log[2]~ '(fold change) |'), rot = 90))
ggsave("plots/allplots_arranged.pdf", allplots_arranged, height = 10, width = 10)
system("open plots/allplots_arranged.pdf")
library(ggplot2)
library(ggpubr)
library(tidyverse)
## DIFFERENTIAL GENE EXPRESSION ANALYSES
# PER GENE BASIS USING abs LF
#PLOTS WITH RANK CORRELATIONS DO NOT FILTER FOR DN_CONT < 0
DEG_data <- read.table("outdata/FINAL_STATS/DEG_DNDS.txt")
### SPEARMAN RANK ANALYSIS ----
## DN
cor.test(abs(DEG_data$logFC), DEG_data$Dn_cont, method = 'spearman', exact = FALSE )
## DS
cor.test(abs(DEG_data$logFC), DEG_data$Ds_cont, method = 'spearman', exact = FALSE )
DEGplots <- list()
DEGplots[[1]] <- ggplot(DEG_data, aes(x = Dn_cont, y = abs(logFC))) + geom_point() +
stat_cor(method = 'spearman') +
labs(x = '', y = '')
DEGplots[[2]] <- ggplot(DEG_data, aes(x = Ds_cont, y = abs(logFC))) + geom_point() +
stat_cor(method = 'spearman') +
labs(x = '', y = '')
DEGplots_arranged <- ggarrange(plotlist = DEGplots, nrow = 1, labels = c("A", "B"))
ggsave("plots/DEGplots_SPEARMAN_arranged.pdf", DEGplots_arranged, height = 5, width = 10)
## ALLELE SPECIFIC EXPRESSION EXPRESSION ANALYSIS ----
#PER GENE BASIS USING abs LF
#PLOTS WITH RANK CORRELATIONS DO NOT FILTER FOR DN_CONT < 0
# REPORT MEASURES FOR HOM BIRDS and HET BIRDS
ASE_DATA <- read.table("outdata/FINAL_STATS/ASE_DNDS.txt")
#### SPEARMANS RANK FOR HETEROZYGOTES
hetASE <- ASE_DATA[ASE_DATA$genotype == "AB",]
cor.test(abs(hetASE$log2_aFC), hetASE$Ds_cont, method = 'spearman', exact = FALSE)
cor.test(abs(hetASE$log2_aFC), hetASE$Dn_cont, method = 'spearman', exact = FALSE)
### SPEARMNS RANK FOR HOMOZYGOTES
homASE <- ASE_DATA[ASE_DATA$genotype == "AA",]
cor.test(abs(homASE$log2_aFC), homASE$Ds_cont, method = 'spearman', exact = FALSE)
cor.test(abs(homASE$log2_aFC), homASE$Dn_cont, method = 'spearman', exact = FALSE)
ASEplots <- list()
ASEplots[[1]] <- ggplot(hetASE, aes(x = (Ds_cont), y = (abs(log2_aFC)))) +
geom_point(alpha = 0.1) +
stat_cor(method = 'spearman') + labs(x = "", y = "") +
ylim(0,11) + theme_bw()
ASEplots[[2]] <- ggplot(hetASE, aes(x = Dn_cont, y = abs(log2_aFC))) +
geom_point(alpha = 0.1) +
stat_cor(method = 'spearman') + labs(x = "", y = "")+ylim(0,11)+ theme_bw()
ASEplots[[3]] <- ggplot(homASE, aes(x = (Ds_cont), y = (abs(log2_aFC)))) +
geom_point(alpha = 0.1) +
stat_cor(method = 'spearman') +
labs(x = 'Ds / gene length', y = "") +ylim(0,11)+ theme_bw()
ASEplots[[4]] <- ggplot(homASE, aes(x = Dn_cont, y = abs(log2_aFC))) +
geom_point(alpha = 0.1) +
stat_cor(method = 'spearman') +
labs(x = 'Dn / gene length', y = "") +ylim(0,11)+ theme_bw()
ASEplots_arranged <- ggarrange(plotlist = ASEplots, labels = c("a", "b", "c", "d"))
ASEplots_arranged <- annotate_figure(ASEplots_arranged, left =
text_grob(bquote('|'~log[2]~ '(fold change) |'), rot = 90))
ASEplots_arranged
ggsave("plots/ASEplots_SPEARMAN_arranged.pdf", ASEplots_arranged, height = 6, width = 10)
system("open plots/ASEplots_SPEARMAN_arranged.pdf")
system("open plots/ASEplots_SPEARMAN_arranged.pdf")
ASEplots_arranged <- ggarrange(plotlist = ASEplots, labels = c("a", "b", "c", "d"))
ASEplots_arranged <- annotate_figure(ASEplots_arranged, left =
text_grob(bquote('|'~log[2]~ '(fold change) |'), rot = 90))
ggsave("plots/ASEplots_SPEARMAN_arranged.pdf", ASEplots_arranged, height = 6, width = 6)
system("open plots/ASEplots_SPEARMAN_arranged.pdf")
ggsave("plots/ASEplots_SPEARMAN_arranged.pdf", ASEplots_arranged, height = 6, width = 7)
system("open plots/ASEplots_SPEARMAN_arranged.pdf")
ASEplots[[4]] <- ggplot(homASE, aes(x = Dn_cont, y = abs(log2_aFC))) +
geom_point(alpha = 0.1) +
stat_cor(method = 'spearman') +
labs(x = bquote(~D[n]), y = "") +ylim(0,11)+ theme_bw()
ASEplots[[4]]
ASEplots[[4]] <- ggplot(homASE, aes(x = Dn_cont, y = abs(log2_aFC))) +
geom_point(alpha = 0.1) +
stat_cor(method = 'spearman') +
labs(x = bquote(~D[n]~ '/ gene length'), y = "") +ylim(0,11)+ theme_bw()
ASEplots[[4]]
ASEplots[[3]] <- ggplot(homASE, aes(x = (Ds_cont), y = (abs(log2_aFC)))) +
geom_point(alpha = 0.1) +
stat_cor(method = 'spearman') +
labs(x = bquote(~D[s]~ '/ gene length'), y = "") +ylim(0,11)+ theme_bw()
ASEplots[[4]] <- ggplot(homASE, aes(x = Dn_cont, y = abs(log2_aFC))) +
geom_point(alpha = 0.1) +
stat_cor(method = 'spearman') +
labs(x = bquote(~D[n]~ '/ gene length'), y = "") +ylim(0,11)+ theme_bw()
ASEplots_arranged <- ggarrange(plotlist = ASEplots, labels = c("a", "b", "c", "d"))
ASEplots_arranged <- annotate_figure(ASEplots_arranged, left =
text_grob(bquote('|'~log[2]~ '(fold change) |'), rot = 90))
ggsave("plots/ASEplots_SPEARMAN_arranged.pdf", ASEplots_arranged, height = 6, width = 7)
system("open plots/ASEplots_SPEARMAN_arranged.pdf")
?plot_annotation
??plot_annotation
