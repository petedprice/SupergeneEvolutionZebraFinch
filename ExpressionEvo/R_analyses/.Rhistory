AArm <- AArs > 0.5 * length(which(sample_info$genotype == "AA"))
ABrm <- ABrs > 0.5 * length(which(sample_info$genotype == "AB"))
keep <- ABrm == TRUE | AArm == TRUE
y <- y[keep,,keep.lib.sizes=FALSE]
y <- calcNormFactors(y)
y <- estimateDisp(y, design)
ABArpkm <- rpkm(y, gene.length = y$genes, log = T)
ABAet <- exactTest(y, pair = c("AB", "AA"))
ABAet$table$fdr <- p.adjust(ABAet$table$PValue, "fdr")
ABAet$table$Chromosome <- NA
ABAet$table[sex_genes,]$Chromosome <- "Z"
ABAet$table[autosome_genes,]$Chromosome <- "aut"
ABAet$table[tip_genes,]$Chromosome <- "Ztip"
ABAet$table$Bias <- "Unbias"
ABAet$table$Bias[which(ABAet$table$fdr < 0.05 & ABAet$table$logFC < -1)] <- "AB_bias"
ABAet$table$Bias[which(ABAet$table$fdr < 0.05 & ABAet$table$logFC > 1)] <- "AA_bias"
AB_bias <- rownames(ABAet$table[which(ABAet$table$Bias == "AB_bias"),])
ABAA_summary <- ABAet$table %>%
filter(is.na(logFC) == F) %>%
count(Chromosome, Bias)
ABAA_summary$total <- 0
ABAA_summary$total[ABAA_summary$Chromosome == "Z"] <-
sum(ABAA_summary$n[ABAA_summary$Chromosome == "Z"])
ABAA_summary$total[ABAA_summary$Chromosome == "Ztip"] <-
sum(ABAA_summary$n[ABAA_summary$Chromosome == "Ztip"])
ABAA_summary$total[ABAA_summary$Chromosome == "aut"] <-
sum(ABAA_summary$n[ABAA_summary$Chromosome == "aut"])
ABAA_summary$pntg <- (ABAA_summary$n/ABAA_summary$total) * 100
ABAA_summary$comp <- "ABvsAA"
ABAset <-ABAet$table[sex_genes,]
ABAaet <-ABAet$table[autosome_genes,]
chisq_table <- ABAA_summary %>%
group_by(Chromosome) %>%
summarise(DEG = sum(n[Bias != "Unbias"]),
UNBIAS = sum(n[Bias == "Unbias"]),
total = total[1],
pntg = sum(pntg[Bias != "Unbias"]))
chisq_result <- chisq.test(chisq_table[c(1,3),c(2:3)])
chisq_result$expected
chisq_result$observed
salmon_DE_data[,c(4,5)] <- ABAset[,c(1,4)]
AB_B <- rownames(ABAset)[which(ABAset$fdr < 0.05 & ABAset$logFC < -1)]
AA_B <- rownames(ABAset)[which(ABAset$fdr < 0.05 & ABAset$logFC > 1)]
salmon_DE_data[AB_B,6] <- "AB_Bias"
salmon_DE_data[AA_B,6] <- "A_Bias"
ABa_B <- rownames(ABAaet)[which(ABAaet$fdr < 0.05 & ABAaet$logFC < -1)]
AAa_B <- rownames(ABAaet)[which(ABAaet$fdr < 0.05 & ABAaet$logFC > 1)]
write.table(intersect(rownames(ABArpkm), autosome_genes), "outdata/DEG_analyses/DGE_AB_AA_Expressed_autosomal_genes.txt",
quote = FALSE, col.names = FALSE, row.names = FALSE)
write.table(intersect(rownames(ABArpkm), sex_genes), "outdata/DEG_analyses/DGE_AB_AA_Expressed_sex_genes.txt",
quote = FALSE, col.names = FALSE, row.names = FALSE)
for (f in c(0,0.5, 1)){
write.table(intersect(rownames(filter(ABAet$table, fdr < 0.05 & abs(logFC) >= f)), autosome_genes), paste("outdata/DEG_analyses/DGE_AB_AA_Bias_lfc", f, "_autosomal_genes.txt", sep = ""),
quote = FALSE, col.names = FALSE, row.names = FALSE)
write.table(intersect(rownames(filter(ABAet$table, fdr < 0.05 & abs(logFC) >= f)), sex_genes), paste("outdata/DEG_analyses/DGE_AB_AA_Bias_lfc", f, "_sex_genes.txt", sep = ""),
quote = FALSE, col.names = FALSE, row.names = FALSE)
}
#A vs B (females)
group = sample_info$genotype[sample_info$sex == "F"]
design <- model.matrix(~group)
inds = sample_info$sample[sample_info$sex == "F"]
y <- DGEList(counts = txi$counts[,inds], genes = txi$length[,inds], group = group)
y <- calcNormFactors(y)
temp_rpkm <- rpkm(y, gene.length = y$genes, log = T)
Ars <- rowSums(temp_rpkm[,sample_info$sample[sample_info$genotype == "A"]] >= 2)
Brs <- rowSums(temp_rpkm[,sample_info$sample[sample_info$genotype == "B"]] >= 2)
Arm <- Ars > 0.5 * length(which(sample_info$genotype == "A"))
Brm <- Brs > 0.5 * length(which(sample_info$genotype == "B"))
keep <- Arm == TRUE | Brm == TRUE
y <- y[keep,,keep.lib.sizes=FALSE]
y <- calcNormFactors(y)
y <- estimateDisp(y, design)
ABrpkm <- rpkm(y, gene.length = y$genes, log = T)
ABet$table$fdr <- p.adjust(ABet$table$PValue, "fdr")
ABet <- exactTest(y, pair = c("A", "B"))
ABet$table$Chromosome <- NA
ABet$table[sex_genes,]$Chromosome <- "Z"
ABet$table[autosome_genes,]$Chromosome <- "aut"
ABet$table[tip_genes,]$Chromosome <- "Ztip"
ABet$table$Bias <- "Unbias"
ABet$table$Bias[which(ABet$table$fdr < 0.05 & ABet$table$logFC < -1)] <- "A_bias"
ABet$table$Bias[which(ABet$table$fdr < 0.05 & ABet$table$logFC > 1)] <- "B_bias"
AB_summary <- ABet$table %>%
filter(is.na(logFC) == F) %>%
count(Chromosome, Bias)
AB_summary$total <- 0
AB_summary$total[AB_summary$Chromosome == "Z"] <-
sum(AB_summary$n[AB_summary$Chromosome == "Z"])
AB_summary$total[AB_summary$Chromosome == "Ztip"] <-
sum(AB_summary$n[AB_summary$Chromosome == "Ztip"])
AB_summary$total[AB_summary$Chromosome == "aut"] <-
sum(AB_summary$n[AB_summary$Chromosome == "aut"])
AB_summary$pntg <- (AB_summary$n/AB_summary$total) * 100
AB_summary$comp <- "AvsB"
chisq_table <- ABAA_summary %>%
group_by(Chromosome) %>%
summarise(DEG = sum(n[Bias != "Unbias"]),
UNBIAS = sum(n[Bias == "Unbias"]),
total = total[1],
pntg = sum(pntg[Bias != "Unbias"]))
chisq_result <- chisq.test(chisq_table[c(1,3),c(2:3)])
chisq_result$expected
chisq_result$observed
ABset <-ABet$table[sex_genes,]
salmon_DE_data[,c(7,8)] <- ABset[,c(1,4)]
A_B <- rownames(ABset)[which(ABset$fdr < 0.05 & ABset$logFC < -1)]
B_B <- rownames(ABset)[which(ABset$fdr < 0.05 & ABset$logFC > 1)]
salmon_DE_data[A_B,9] <- "A_Bias"
salmon_DE_data[B_B,9] <- "B_Bias"
salmon_DE_data$GENE <- rownames(salmon_DE_data)
DEG_manuscript_summary <- rbind(AB_summary, ABAA_summary) %>%
filter(Chromosome != "Ztip")
write.table(DEG_manuscript_summary, "outdata/DEG.csv")
save(file = "outdata/DEG_analyses/ABvsAAet.RData",txi, coords_genesZ, ABAet, ABrpkm, ABArpkm, sex_genes, autosome_genes, tip_genes)
DEG_manuscript_summary
### libraries ----
library(stringr)
library(RFLPtools)
library(dplyr)
library(GenomicFeatures)
library(tximport)
library(ggplot2)
library(tidyverse)
library(ggpubr)
library(rstatix)
library(tidyr)
library(ggprism)
library(pheatmap)
library(pvclust)
library(RMariaDB)
library(emojifont)
Strata_pos <- data.frame(strata = c("Strata1", "Strata2", "Strata3"),
start = c(8*10e5,40.5*10e5, 71.2*10e5), end = c(19.55*10e5, 44.35*10e5, 72.95*10e5))
sample_info <- read.table("outdata/project_data_gen.csv", sep = ',', header = T)
#fd <- read.table("data/Analyses_outputs/FULL_DATA.csv")
#load("data/Analyses_outputs/bTG1.4_salmon_txi.RData")
load("outdata/DEG_analyses/ABvsAAet.RData")
group = sample_info$genotype
design <- model.matrix(~group)
inds = sample_info$sample
y <- DGEList(counts = txi$counts[,inds], genes = txi$length[,inds], group = group)
y <- calcNormFactors(y)
allrpkm <- rpkm(y, gene.length = y$genes, log = T)
keep <- rep(FALSE, nrow(allrpkm))
for (s in unique(sample_info$genotype)){
temprpkm <- allrpkm[sample_info$genotype == s]
temp_keep <- rowSums(temprpkm > 2) > (0.5*ncol(temprpkm))
keep[temp_keep] <- TRUE
print(length(temp_keep))
}
y <- y[keep,,keep.lib.sizes=FALSE]
y <- calcNormFactors(y)
y <- estimateDisp(y, design)
filt_allrpkm <- rpkm(y, gene.length = y$genes)
avrpkm <- matrix(ncol = length(unique(sample_info$genotype)), nrow = nrow(filt_allrpkm))
colnames(avrpkm) <- unique(sample_info$genotype)
rownames(avrpkm) <- rownames(filt_allrpkm)
for (g in colnames(avrpkm)){
for (l in 1:nrow(avrpkm)){
temp_exp <- filt_allrpkm[l,which(sample_info$genotype == g)]
avrpkm[l,g] <- mean(as.numeric(temp_exp))
}
}
gavrpkm <- avrpkm[rownames(avrpkm) %in% sex_genes,] %>% as.data.frame()
gavrpkm$GENE <- rownames(gavrpkm)
coords_genesZ$mid <- coords_genesZ$start + (coords_genesZ$width/2)
a1 <- merge(gavrpkm, coords_genesZ[,c('start', 'end', "GENEID")], by.x = 'GENE', by.y = 'GENEID')
a2 <- filter(a1, is.na(a1$start) == FALSE)
a3 <- a2
for (g in unique(a3$GENE)){
dups <- which(a3$GENE == g)
if (length(dups) > 1){
a3 <- a3[-dups[2:length(dups)],]
}
}
ws <- 500000
#no overlap
a4 <- a3[order(a3$start),]
no_sw_average <- matrix(ncol = 7, nrow = round(max(a4$end)/ws)) %>% as.data.frame()
colnames(no_sw_average) <- c("start", "end", "B_genotypes", "AA_genotypes", "AB_genotypes", "A_genotypes", "nogenes")
no_sw_average$start <- seq(0,ws*(nrow(no_sw_average)-1), ws)
no_sw_average$end <- seq(ws+1,(ws+1)*nrow(no_sw_average), ws)
for (w in 1:nrow(no_sw_average)){
ss <- a3[which(a3$end < no_sw_average[w,]$end & a3$start >=no_sw_average[w,]$start),]
avs <- colMeans(ss[,c(2:5)])
no_genes <- nrow(ss)
no_sw_average[w,3:7] <- c(avs, no_genes)
}
no_sw_average <- no_sw_average[is.na(no_sw_average$AB_genotypes) == FALSE,]
ws2=5000000
overlap =100000
#overlap
ol_sw_average <- matrix(ncol = 7, nrow = round(max(a4$end)/overlap)) %>% as.data.frame()
colnames(ol_sw_average) <- c("start", "end", "mid", "B_genotypes", "AA_genotypes", "AB_genotypes", "A_genotypes")
ol_sw_average$mid <- seq(0,max(a4$end), overlap)
ol_sw_average$start <- ol_sw_average$mid - ws2/2
ol_sw_average$end <- ol_sw_average$mid + ws2/2
for (w in 1:nrow(ol_sw_average)){
ss <- a3[which(a3$end < ol_sw_average[w,]$end & a3$start >=ol_sw_average[w,]$start),]
avs <- colMeans(ss[,c(2:5)])
no_genes <- nrow(ss)
ol_sw_average[w,4:7] <- c(avs)
}
ol_sw_average <- ol_sw_average[is.na(ol_sw_average$AB_genotypes) == FALSE,]
### libraries ----
library(stringr)
library(RFLPtools)
library(dplyr)
library(GenomicFeatures)
library(tximport)
library(ggplot2)
library(tidyverse)
library(ggpubr)
library(rstatix)
library(tidyr)
library(ggprism)
library(pheatmap)
library(pvclust)
library(RMariaDB)
library(emojifont)
Strata_pos <- data.frame(strata = c("Strata1", "Strata2", "Strata3"),
start = c(8*10e5,40.5*10e5, 71.2*10e5), end = c(19.55*10e5, 44.35*10e5, 72.95*10e5))
sample_info <- read.table("outdata/project_data_gen.csv", sep = ',', header = T)
#fd <- read.table("data/Analyses_outputs/FULL_DATA.csv")
#load("data/Analyses_outputs/bTG1.4_salmon_txi.RData")
load("outdata/DEG_analyses/ABvsAAet.RData")
group = sample_info$genotype
design <- model.matrix(~group)
inds = sample_info$sample
y <- DGEList(counts = txi$counts[,inds], genes = txi$length[,inds], group = group)
y <- calcNormFactors(y)
allrpkm <- rpkm(y, gene.length = y$genes, log = T)
keep <- rep(FALSE, nrow(allrpkm))
for (s in unique(sample_info$genotype)){
temprpkm <- allrpkm[sample_info$genotype == s]
temp_keep <- rowSums(temprpkm > 2) > (0.5*ncol(temprpkm))
keep[temp_keep] <- TRUE
print(length(temp_keep))
}
y <- y[keep,,keep.lib.sizes=FALSE]
y <- calcNormFactors(y)
y <- estimateDisp(y, design)
filt_allrpkm <- rpkm(y, gene.length = y$genes)
avrpkm <- matrix(ncol = length(unique(sample_info$genotype)), nrow = nrow(filt_allrpkm))
colnames(avrpkm) <- unique(sample_info$genotype)
rownames(avrpkm) <- rownames(filt_allrpkm)
for (g in colnames(avrpkm)){
for (l in 1:nrow(avrpkm)){
temp_exp <- filt_allrpkm[l,which(sample_info$genotype == g)]
avrpkm[l,g] <- mean(as.numeric(temp_exp))
}
}
gavrpkm <- avrpkm[rownames(avrpkm) %in% sex_genes,] %>% as.data.frame()
gavrpkm$GENE <- rownames(gavrpkm)
coords_genesZ$mid <- coords_genesZ$start + (coords_genesZ$width/2)
a1 <- merge(gavrpkm, coords_genesZ[,c('start', 'end', "GENEID")], by.x = 'GENE', by.y = 'GENEID')
a2 <- filter(a1, is.na(a1$start) == FALSE)
a3 <- a2
for (g in unique(a3$GENE)){
dups <- which(a3$GENE == g)
if (length(dups) > 1){
a3 <- a3[-dups[2:length(dups)],]
}
}
ws <- 500000
#no overlap
a4 <- a3[order(a3$start),]
no_sw_average <- matrix(ncol = 7, nrow = round(max(a4$end)/ws)) %>% as.data.frame()
colnames(no_sw_average) <- c("start", "end", "B_genotypes", "AA_genotypes", "AB_genotypes", "A_genotypes", "nogenes")
no_sw_average$end <- seq(ws+1,(ws+1)*nrow(no_sw_average), ws)
no_sw_average$start <- seq(0,ws*(nrow(no_sw_average)-1), ws)
for (w in 1:nrow(no_sw_average)){
ss <- a3[which(a3$end < no_sw_average[w,]$end & a3$start >=no_sw_average[w,]$start),]
avs <- colMeans(ss[,c(2:5)])
no_genes <- nrow(ss)
no_sw_average[w,3:7] <- c(avs, no_genes)
}
no_sw_average <- no_sw_average[is.na(no_sw_average$AB_genotypes) == FALSE,]
overlap =100000
ws2=5000000
#overlap
ol_sw_average <- matrix(ncol = 7, nrow = round(max(a4$end)/overlap)) %>% as.data.frame()
colnames(ol_sw_average) <- c("start", "end", "mid", "B_genotypes", "AA_genotypes", "AB_genotypes", "A_genotypes")
ol_sw_average$mid <- seq(0,max(a4$end), overlap)
ol_sw_average$start <- ol_sw_average$mid - ws2/2
ol_sw_average$end <- ol_sw_average$mid + ws2/2
for (w in 1:nrow(ol_sw_average)){
ss <- a3[which(a3$end < ol_sw_average[w,]$end & a3$start >=ol_sw_average[w,]$start),]
avs <- colMeans(ss[,c(2:5)])
no_genes <- nrow(ss)
ol_sw_average[w,4:7] <- c(avs)
}
ol_sw_average <- ol_sw_average[is.na(ol_sw_average$AB_genotypes) == FALSE,]
tidy_windows <- ol_sw_average %>%
pivot_longer(c("B_genotypes", "AB_genotypes", "A_genotypes", "AA_genotypes"), names_to = "genotypes",
values_to = "rpkm")
tidy_windows$mid <- (tidy_windows$start + (tidy_windows$end - tidy_windows$start))/1e+06
Strata_pos_Mb <- Strata_pos
Strata_pos_Mb[,2:3] <- Strata_pos_Mb[,2:3] /1e+06
ABtopDE <- filter(ABAet$table, Bias == "AB_bias" & Chromosome == "Z")
ABtopDE$gene <- rownames(ABtopDE)
ABtopDE <- ABtopDE %>% filter(gene %in% sex_genes)
ABtopDE <- ABtopDE %>%
merge(coords_genesZ, by.x = "gene", by.y = "GENEID")
ABtopDE$rpkm = rep(2^6.5)
#colnames(ABtopDE) <- c("mid", "genotypes", "rpkm")
ABtopDE$mid <- ABtopDE$mid/1e+06
AAtopDE <- filter(ABAet$table, Bias == "AA_bias" & Chromosome == "Z")
AAtopDE$gene <- rownames(AAtopDE)
AAtopDE <- AAtopDE %>%
merge(coords_genesZ, by.x = "gene", by.y = "GENEID")
AAtopDE$rpkm = rep(2^6.5)
#colnames(ABtopDE) <- c("mid", "genotypes", "rpkm")
AAtopDE$mid <- AAtopDE$mid/1e+06
tidy_windows[tidy_windows == "A_genotypes"] <- "A (\u2640)"
tidy_windows[tidy_windows == "B_genotypes"] <- "B (\u2640)"
tidy_windows[tidy_windows == "AA_genotypes"] <- "AA (\u2642)"
tidy_windows[tidy_windows == "AB_genotypes"] <- "AB (\u2642)"
tidy_windows$genotypes <- factor(tidy_windows$genotypes,
levels = c("AA (\u2642)", "AB (\u2642)",
"A (\u2640)", "B (\u2640)"))
pdf("plots/Zexpression.pdf", height = 3, width = 7)
tidy_windows_plot <-
ggplot(arrange(tidy_windows, genotypes) , aes(x = mid, y = log(rpkm, base = 2), colour = genotypes)) + geom_line() +
geom_vline(xintercept = c(74, 7), color = 'black', linetype = 'dotted') +
annotate(xmin = Strata_pos_Mb[1,2], xmax = Strata_pos_Mb[1,3], ymin = -Inf, ymax = Inf, geom = 'rect', alpha = 0.2, fill = "red") +
annotate(xmin = Strata_pos_Mb[2,2], xmax = Strata_pos_Mb[2,3], ymin = -Inf, ymax = Inf, geom = 'rect', alpha = 0.2, fill = "red") +
annotate(xmin = Strata_pos_Mb[3,2], xmax = Strata_pos_Mb[3,3], ymin = -Inf, ymax = Inf, geom = 'rect', alpha = 0.2, fill = "red") +
annotate(xmin = 7, xmax = Strata_pos_Mb[1,2], ymin = -Inf, ymax = Inf, geom = 'rect', alpha = 0.1) +
annotate(xmin = Strata_pos_Mb[1,3], xmax = Strata_pos_Mb[2,2], ymin = -Inf, ymax = Inf, geom = 'rect', alpha = 0.1) +
annotate(xmin = Strata_pos_Mb[2,3], xmax = 74, ymin = -Inf, ymax = Inf, geom = 'rect', alpha = 0.1) +
theme_classic() + xlab("Position (Mb)")  +ylab(bquote(~Log[2]~ '(rpkm)')) +
geom_point(data = ABtopDE, col = 'grey45', shape = 'star', size = 0.5) +
geom_point(data = AAtopDE, col = 'green4', shape = 'star', size = 0.5) +
scale_colour_manual(values = brewer.pal(4, "Paired")[c(4,8,1,2)]) +
labs(colour = "Genotype")
tidy_windows_plot
dev.off()
ABtopDE
tidy_windows[tidy_windows == "A_genotypes"] <- "A (\u2640)"
tidy_windows[tidy_windows == "B_genotypes"] <- "B (\u2640)"
tidy_windows[tidy_windows == "AA_genotypes"] <- "AA (\u2642)"
tidy_windows[tidy_windows == "AB_genotypes"] <- "AB (\u2642)"
tidy_windows$genotypes <- factor(tidy_windows$genotypes,
levels = c("AA (\u2642)", "AB (\u2642)",
"A (\u2640)", "B (\u2640)"))
pdf("plots/Zexpression.pdf", height = 3, width = 7)
tidy_windows_plot <-
ggplot(arrange(tidy_windows, genotypes) , aes(x = mid, y = log(rpkm, base = 2), colour = genotypes)) + geom_line() +
geom_vline(xintercept = c(70.01, 6.5), color = 'black', linetype = 'dotted') +
#annotate(xmin = Strata_pos_Mb[1,2], xmax = Strata_pos_Mb[1,3], ymin = -Inf, ymax = Inf, geom = 'rect', alpha = 0.2, fill = "red") +
#annotate(xmin = Strata_pos_Mb[2,2], xmax = Strata_pos_Mb[2,3], ymin = -Inf, ymax = Inf, geom = 'rect', alpha = 0.2, fill = "red") +
#annotate(xmin = Strata_pos_Mb[3,2], xmax = Strata_pos_Mb[3,3], ymin = -Inf, ymax = Inf, geom = 'rect', alpha = 0.2, fill = "red") +
#annotate(xmin = 7, xmax = Strata_pos_Mb[1,2], ymin = -Inf, ymax = Inf, geom = 'rect', alpha = 0.1) +
#annotate(xmin = Strata_pos_Mb[1,3], xmax = Strata_pos_Mb[2,2], ymin = -Inf, ymax = Inf, geom = 'rect', alpha = 0.1) +
#annotate(xmin = Strata_pos_Mb[2,3], xmax = 74, ymin = -Inf, ymax = Inf, geom = 'rect', alpha = 0.1) +
theme_classic() + xlab("Position (Mb)")  +ylab(bquote(~Log[2]~ '(rpkm)')) +
geom_point(data = ABtopDE, col = 'grey45', shape = 'star', size = 0.5) +
geom_point(data = AAtopDE, col = 'green4', shape = 'star', size = 0.5) +
scale_colour_manual(values = brewer.pal(4, "Paired")[c(4,8,1,2)]) +
labs(colour = "Genotype")
tidy_windows_plot
dev.off()
pdf("plots/Zexpression.pdf", height = 3, width = 7)
tidy_windows_plot <-
ggplot(arrange(tidy_windows, genotypes) , aes(x = mid, y = log(rpkm, base = 2), colour = genotypes)) + geom_line() +
geom_vline(xintercept = c(70.01, 6.5), color = 'black', linetype = 'dotted') +
#annotate(xmin = Strata_pos_Mb[1,2], xmax = Strata_pos_Mb[1,3], ymin = -Inf, ymax = Inf, geom = 'rect', alpha = 0.2, fill = "red") +
#annotate(xmin = Strata_pos_Mb[2,2], xmax = Strata_pos_Mb[2,3], ymin = -Inf, ymax = Inf, geom = 'rect', alpha = 0.2, fill = "red") +
#annotate(xmin = Strata_pos_Mb[3,2], xmax = Strata_pos_Mb[3,3], ymin = -Inf, ymax = Inf, geom = 'rect', alpha = 0.2, fill = "red") +
annotate(xmin = 7, xmax = Strata_pos_Mb[1,2], ymin = -Inf, ymax = Inf, geom = 'rect', alpha = 0.1) +
#annotate(xmin = Strata_pos_Mb[1,3], xmax = Strata_pos_Mb[2,2], ymin = -Inf, ymax = Inf, geom = 'rect', alpha = 0.1) +
#annotate(xmin = Strata_pos_Mb[2,3], xmax = 74, ymin = -Inf, ymax = Inf, geom = 'rect', alpha = 0.1) +
theme_classic() + xlab("Position (Mb)")  +ylab(bquote(~Log[2]~ '(rpkm)')) +
geom_point(data = ABtopDE, col = 'grey45', shape = 'star', size = 0.5) +
geom_point(data = AAtopDE, col = 'green4', shape = 'star', size = 0.5) +
scale_colour_manual(values = brewer.pal(4, "Paired")[c(4,8,1,2)]) +
labs(colour = "Genotype")
#scale_colour_manual(values = brewer.pal(4, "Set1")[c(2,4,3,1)]) +
tidy_windows_plot
dev.off()
pdf("plots/Zexpression.pdf", height = 3, width = 7)
tidy_windows_plot <-
ggplot(arrange(tidy_windows, genotypes) , aes(x = mid, y = log(rpkm, base = 2), colour = genotypes)) + geom_line() +
geom_vline(xintercept = c(70.01, 6.5), color = 'black', linetype = 'dotted') +
#annotate(xmin = Strata_pos_Mb[1,2], xmax = Strata_pos_Mb[1,3], ymin = -Inf, ymax = Inf, geom = 'rect', alpha = 0.2, fill = "red") +
#annotate(xmin = Strata_pos_Mb[2,2], xmax = Strata_pos_Mb[2,3], ymin = -Inf, ymax = Inf, geom = 'rect', alpha = 0.2, fill = "red") +
#annotate(xmin = Strata_pos_Mb[3,2], xmax = Strata_pos_Mb[3,3], ymin = -Inf, ymax = Inf, geom = 'rect', alpha = 0.2, fill = "red") +
annotate(xmin = 6.5, xmax = 70.01, ymin = -Inf, ymax = Inf, geom = 'rect', alpha = 0.1) +
#annotate(xmin = Strata_pos_Mb[1,3], xmax = Strata_pos_Mb[2,2], ymin = -Inf, ymax = Inf, geom = 'rect', alpha = 0.1) +
#annotate(xmin = Strata_pos_Mb[2,3], xmax = 74, ymin = -Inf, ymax = Inf, geom = 'rect', alpha = 0.1) +
theme_classic() + xlab("Position (Mb)")  +ylab(bquote(~Log[2]~ '(rpkm)')) +
geom_point(data = ABtopDE, col = 'grey45', shape = 'star', size = 0.5) +
geom_point(data = AAtopDE, col = 'green4', shape = 'star', size = 0.5) +
scale_colour_manual(values = brewer.pal(4, "Paired")[c(4,8,1,2)]) +
labs(colour = "Genotype")
#scale_colour_manual(values = brewer.pal(4, "Set1")[c(2,4,3,1)]) +
tidy_windows_plot
dev.off()
tidy_windows
genotypes
tidy_windows
tidy_windows
tidy_windows %>% group_by(genotypes) %>%
summarise(mean = mean(rpkm))
head(ol_sw_average)
a4
head(a4)
no_sw_average
head(no_sw_average)
a1
head(a1)
View(a1)
a2
a3
head(a3)
#no overlap
a4 <- a3[order(a3$start),]
a4
head(a4)
no_sw_average <- matrix(ncol = 7, nrow = round(max(a4$end)/ws)) %>% as.data.frame()
no_sw_average
#no overlap
a4 <- a3[order(a3$start),]
no_sw_average <- matrix(ncol = 7, nrow = round(max(a4$end)/ws)) %>% as.data.frame()
no_sw_average
colnames(no_sw_average) <- c("start", "end", "B_genotypes", "AA_genotypes", "AB_genotypes", "A_genotypes", "nogenes")
no_sw_average$start <- seq(0,ws*(nrow(no_sw_average)-1), ws)
no_sw_average$end <- seq(ws+1,(ws+1)*nrow(no_sw_average), ws)
no_sw_average
for (w in 1:nrow(no_sw_average)){
ss <- a3[which(a3$end < no_sw_average[w,]$end & a3$start >=no_sw_average[w,]$start),]
avs <- colMeans(ss[,c(2:5)])
no_genes <- nrow(ss)
no_sw_average[w,3:7] <- c(avs, no_genes)
}
no_sw_average <- no_sw_average[is.na(no_sw_average$AB_genotypes) == FALSE,]
no_sw_average
head(no_sw_average)
head(a4)
a4 <- a3[order(a3$start),]
no_sw_average <- matrix(ncol = 7, nrow = round(max(a4$end)/ws)) %>% as.data.frame()
colnames(no_sw_average) <- c("start", "end", "B_genotypes", "AB_genotypes", "A_genotypes", "AA_genotypes", "nogenes")
no_sw_average$start <- seq(0,ws*(nrow(no_sw_average)-1), ws)
no_sw_average$end <- seq(ws+1,(ws+1)*nrow(no_sw_average), ws)
for (w in 1:nrow(no_sw_average)){
ss <- a3[which(a3$end < no_sw_average[w,]$end & a3$start >=no_sw_average[w,]$start),]
avs <- colMeans(ss[,c(2:5)])
no_genes <- nrow(ss)
no_sw_average[w,3:7] <- c(avs, no_genes)
}
no_sw_average <- no_sw_average[is.na(no_sw_average$AB_genotypes) == FALSE,]
no_sw_average
ws2=5000000
overlap =100000
#overlap
ol_sw_average <- matrix(ncol = 7, nrow = round(max(a4$end)/overlap)) %>% as.data.frame()
ws2=5000000
overlap =100000
#overlap
ol_sw_average <- matrix(ncol = 7, nrow = round(max(a4$end)/overlap)) %>% as.data.frame()
colnames(ol_sw_average) <- c("start", "end", "mid", "B_genotypes", "AB_genotypes", "A_genotypes", "AA_genotypes")
ol_sw_average$mid <- seq(0,max(a4$end), overlap)
ol_sw_average$start <- ol_sw_average$mid - ws2/2
ol_sw_average$end <- ol_sw_average$mid + ws2/2
for (w in 1:nrow(ol_sw_average)){
ss <- a3[which(a3$end < ol_sw_average[w,]$end & a3$start >=ol_sw_average[w,]$start),]
avs <- colMeans(ss[,c(2:5)])
no_genes <- nrow(ss)
ol_sw_average[w,4:7] <- c(avs)
}
ol_sw_average <- ol_sw_average[is.na(ol_sw_average$AB_genotypes) == FALSE,]
tidy_windows <- ol_sw_average %>%
pivot_longer(c("B_genotypes", "AB_genotypes", "A_genotypes", "AA_genotypes"), names_to = "genotypes",
values_to = "rpkm")
tidy_windows$mid <- (tidy_windows$start + (tidy_windows$end - tidy_windows$start))/1e+06
Strata_pos_Mb <- Strata_pos
Strata_pos_Mb[,2:3] <- Strata_pos_Mb[,2:3] /1e+06
ABtopDE <- filter(ABAet$table, Bias == "AB_bias" & Chromosome == "Z")
ABtopDE$gene <- rownames(ABtopDE)
ABtopDE <- ABtopDE %>% filter(gene %in% sex_genes)
ABtopDE <- ABtopDE %>%
merge(coords_genesZ, by.x = "gene", by.y = "GENEID")
ABtopDE$rpkm = rep(2^6.5)
#colnames(ABtopDE) <- c("mid", "genotypes", "rpkm")
ABtopDE$mid <- ABtopDE$mid/1e+06
AAtopDE <- filter(ABAet$table, Bias == "AA_bias" & Chromosome == "Z")
AAtopDE$gene <- rownames(AAtopDE)
AAtopDE <- AAtopDE %>%
merge(coords_genesZ, by.x = "gene", by.y = "GENEID")
AAtopDE$rpkm = rep(2^6.5)
#colnames(ABtopDE) <- c("mid", "genotypes", "rpkm")
AAtopDE$mid <- AAtopDE$mid/1e+06
tidy_windows[tidy_windows == "A_genotypes"] <- "A (\u2640)"
tidy_windows[tidy_windows == "B_genotypes"] <- "B (\u2640)"
tidy_windows[tidy_windows == "AA_genotypes"] <- "AA (\u2642)"
tidy_windows[tidy_windows == "AB_genotypes"] <- "AB (\u2642)"
tidy_windows$genotypes <- factor(tidy_windows$genotypes,
levels = c("AA (\u2642)", "AB (\u2642)",
"A (\u2640)", "B (\u2640)"))
pdf("plots/Zexpression.pdf", height = 3, width = 7)
tidy_windows_plot <-
ggplot(arrange(tidy_windows, genotypes) , aes(x = mid, y = log(rpkm, base = 2), colour = genotypes)) + geom_line() +
geom_vline(xintercept = c(70.01, 6.5), color = 'black', linetype = 'dotted') +
annotate(xmin = 6.5, xmax = 70.01, ymin = -Inf, ymax = Inf, geom = 'rect', alpha = 0.1) +
theme_classic() + xlab("Position (Mb)")  +ylab(bquote(~Log[2]~ '(rpkm)')) +
geom_point(data = ABtopDE, col = 'grey45', shape = 'star', size = 0.5) +
geom_point(data = AAtopDE, col = 'green4', shape = 'star', size = 0.5) +
scale_colour_manual(values = brewer.pal(4, "Paired")[c(4,8,1,2)]) +
labs(colour = "Genotype")
tidy_windows_plot
dev.off()
